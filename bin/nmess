#!/usr/bin/env node

var cli = require('commander'),
	rands = require('random-string'),
	down = require('download'),
	replace = require('replace'),
	fs = require('fs'),
	path = require('path');

cli
	.version('0.2.19')
	.usage('[options] <application-name>')
	.option('-d --directory [directory]', 'Application directory (application-name)')
	.option('-s --secret [session-secret]', 'Session secret (random)')
	.option('-b --database [localdb]', 'Local database name (application-name)')
	.parse(process.argv);

var options = {
	name: cli.args[0] || (function() {
		throw new Error('Name not specified.')
	})()
};

options.directory = cli.directory || options.name;
options.secret = cli.secret || rands();
options.database = cli.database || options.name;

(new down).get('https://github.com/chronize/node-mess/archive/master.zip', options.directory, {
	extract: true,
	strip: 1
}).run(function() {

	var renameRecursive = function(dir, find, replacewith) {
		var children = fs.readdirSync(dir),
			current,
			replacecurrent;
		for (var i = 0; i < children.length; i++) {
			current = path.join(dir, children[i]);
			replacecurrent = current.replace(find, replacewith);
			fs.renameSync(current, replacecurrent);
			if (fs.statSync(replacecurrent).isDirectory()) {
				renameRecursive(replacecurrent, find, replacewith);
			}
		}
	};

	var populateTemplates = function(find, replacewith) {
		renameRecursive(options.directory, find, replacewith);

		replace({
			regex: find,
			replacement: replacewith,
			paths: [options.directory],
			recursive: true,
			silent: true
		});

	};

	populateTemplates(/\{\{application-name\}\}/g, options.name);
	populateTemplates(/\{\{session-secret\}\}/g, options.secret);
	populateTemplates(/\{\{localdb\}\}/g, options.database);

	console.log('Node MESS Application generated with:')
	console.log('application-name: ' + options.name);
	console.log('directory:        ' + options.directory);
	console.log('session-secret:   ' + options.secret);
	console.log('localdb:          ' + options.database);

});
